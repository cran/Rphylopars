// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Rcpp_chol
arma::mat Rcpp_chol(arma::mat M);
RcppExport SEXP Rphylopars_Rcpp_chol(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    __result = Rcpp::wrap(Rcpp_chol(M));
    return __result;
END_RCPP
}
// try_clip
arma::mat try_clip(arma::mat M, int nvar, int verbose);
RcppExport SEXP Rphylopars_try_clip(SEXP MSEXP, SEXP nvarSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type nvar(nvarSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    __result = Rcpp::wrap(try_clip(M, nvar, verbose));
    return __result;
END_RCPP
}
// cDot
arma::mat cDot(arma::mat A, arma::mat B);
RcppExport SEXP Rphylopars_cDot(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    __result = Rcpp::wrap(cDot(A, B));
    return __result;
END_RCPP
}
// try_inv
arma::mat try_inv(arma::mat M, int nvar);
RcppExport SEXP Rphylopars_try_inv(SEXP MSEXP, SEXP nvarSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type nvar(nvarSEXP);
    __result = Rcpp::wrap(try_inv(M, nvar));
    return __result;
END_RCPP
}
// inv_subset
List inv_subset(arma::mat mat_to_inv, List subset_list);
RcppExport SEXP Rphylopars_inv_subset(SEXP mat_to_invSEXP, SEXP subset_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type mat_to_inv(mat_to_invSEXP);
    Rcpp::traits::input_parameter< List >::type subset_list(subset_listSEXP);
    __result = Rcpp::wrap(inv_subset(mat_to_inv, subset_list));
    return __result;
END_RCPP
}
// which2
arma::uvec which2(arma::vec x, int y);
RcppExport SEXP Rphylopars_which2(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type y(ySEXP);
    __result = Rcpp::wrap(which2(x, y));
    return __result;
END_RCPP
}
// condition_f
arma::uvec condition_f(arma::vec iu, int i, int nspecies, arma::mat edge, int nob);
RcppExport SEXP Rphylopars_condition_f(SEXP iuSEXP, SEXP iSEXP, SEXP nspeciesSEXP, SEXP edgeSEXP, SEXP nobSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type nspecies(nspeciesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< int >::type nob(nobSEXP);
    __result = Rcpp::wrap(condition_f(iu, i, nspecies, edge, nob));
    return __result;
END_RCPP
}
// convert_pars
arma::mat convert_pars(arma::vec theta, arma::vec options, double T);
RcppExport SEXP Rphylopars_convert_pars(SEXP thetaSEXP, SEXP optionsSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< double >::type T(TSEXP);
    __result = Rcpp::wrap(convert_pars(theta, options, T));
    return __result;
END_RCPP
}
// threepoint
double threepoint(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint(theta, options, y, ku, iu, edge, edgelength, uchildren_list, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// threepoint_nopheno
double threepoint_nopheno(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, arma::vec edgevec, List subset_list, List species_subset, arma::vec tip_combn, arma::vec ymin, arma::vec ymax, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint_nopheno(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP edgevecSEXP, SEXP subset_listSEXP, SEXP species_subsetSEXP, SEXP tip_combnSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgevec(edgevecSEXP);
    Rcpp::traits::input_parameter< List >::type subset_list(subset_listSEXP);
    Rcpp::traits::input_parameter< List >::type species_subset(species_subsetSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tip_combn(tip_combnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint_nopheno(theta, options, y, ku, iu, edge, edgelength, uchildren_list, edgevec, subset_list, species_subset, tip_combn, ymin, ymax, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// threepoint_phenocorr
double threepoint_phenocorr(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, List subset_list, List species_subset, arma::vec tip_combn, arma::vec ymin, arma::vec ymax, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint_phenocorr(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP subset_listSEXP, SEXP species_subsetSEXP, SEXP tip_combnSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< List >::type subset_list(subset_listSEXP);
    Rcpp::traits::input_parameter< List >::type species_subset(species_subsetSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tip_combn(tip_combnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint_phenocorr(theta, options, y, ku, iu, edge, edgelength, uchildren_list, subset_list, species_subset, tip_combn, ymin, ymax, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// threepoint_calc_pheno
double threepoint_calc_pheno(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, List subset_list, List species_subset, arma::vec tip_combn, arma::vec ymin, arma::vec ymax, List phenocovs, List inv_phenocovs, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint_calc_pheno(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP subset_listSEXP, SEXP species_subsetSEXP, SEXP tip_combnSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP phenocovsSEXP, SEXP inv_phenocovsSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< List >::type subset_list(subset_listSEXP);
    Rcpp::traits::input_parameter< List >::type species_subset(species_subsetSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tip_combn(tip_combnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< List >::type phenocovs(phenocovsSEXP);
    Rcpp::traits::input_parameter< List >::type inv_phenocovs(inv_phenocovsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint_calc_pheno(theta, options, y, ku, iu, edge, edgelength, uchildren_list, subset_list, species_subset, tip_combn, ymin, ymax, phenocovs, inv_phenocovs, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// threepoint_predict
arma::mat threepoint_predict(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint_predict(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint_predict(theta, options, y, ku, iu, edge, edgelength, uchildren_list, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// threepoint_nopheno_predict
arma::mat threepoint_nopheno_predict(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, arma::vec edgevec, List subset_list, List species_subset, arma::vec tip_combn, arma::vec ymin, arma::vec ymax, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint_nopheno_predict(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP edgevecSEXP, SEXP subset_listSEXP, SEXP species_subsetSEXP, SEXP tip_combnSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgevec(edgevecSEXP);
    Rcpp::traits::input_parameter< List >::type subset_list(subset_listSEXP);
    Rcpp::traits::input_parameter< List >::type species_subset(species_subsetSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tip_combn(tip_combnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint_nopheno_predict(theta, options, y, ku, iu, edge, edgelength, uchildren_list, edgevec, subset_list, species_subset, tip_combn, ymin, ymax, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// threepoint_phenocorr_predict
arma::mat threepoint_phenocorr_predict(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, List subset_list, List species_subset, arma::vec tip_combn, arma::vec ymin, arma::vec ymax, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint_phenocorr_predict(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP subset_listSEXP, SEXP species_subsetSEXP, SEXP tip_combnSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< List >::type subset_list(subset_listSEXP);
    Rcpp::traits::input_parameter< List >::type species_subset(species_subsetSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tip_combn(tip_combnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint_phenocorr_predict(theta, options, y, ku, iu, edge, edgelength, uchildren_list, subset_list, species_subset, tip_combn, ymin, ymax, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// threepoint_calc_pheno_predict
arma::mat threepoint_calc_pheno_predict(arma::vec theta, arma::vec options, arma::vec y, arma::vec ku, arma::vec iu, arma::mat edge, arma::vec edgelength, Rcpp::List uchildren_list, List subset_list, List species_subset, arma::vec tip_combn, arma::vec ymin, arma::vec ymax, List phenocovs, List inv_phenocovs, arma::vec non_optim_transform, arma::vec models, arma::uvec externalEdge, arma::uvec not_externalEdge, arma::vec dist_anc, arma::vec dist_des, double Tmax, double Tmin, int nmodels, arma::vec lower_bounds, arma::vec upper_bounds, arma::vec OU_D, arma::vec times);
RcppExport SEXP Rphylopars_threepoint_calc_pheno_predict(SEXP thetaSEXP, SEXP optionsSEXP, SEXP ySEXP, SEXP kuSEXP, SEXP iuSEXP, SEXP edgeSEXP, SEXP edgelengthSEXP, SEXP uchildren_listSEXP, SEXP subset_listSEXP, SEXP species_subsetSEXP, SEXP tip_combnSEXP, SEXP yminSEXP, SEXP ymaxSEXP, SEXP phenocovsSEXP, SEXP inv_phenocovsSEXP, SEXP non_optim_transformSEXP, SEXP modelsSEXP, SEXP externalEdgeSEXP, SEXP not_externalEdgeSEXP, SEXP dist_ancSEXP, SEXP dist_desSEXP, SEXP TmaxSEXP, SEXP TminSEXP, SEXP nmodelsSEXP, SEXP lower_boundsSEXP, SEXP upper_boundsSEXP, SEXP OU_DSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ku(kuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edgelength(edgelengthSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type uchildren_list(uchildren_listSEXP);
    Rcpp::traits::input_parameter< List >::type subset_list(subset_listSEXP);
    Rcpp::traits::input_parameter< List >::type species_subset(species_subsetSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tip_combn(tip_combnSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ymax(ymaxSEXP);
    Rcpp::traits::input_parameter< List >::type phenocovs(phenocovsSEXP);
    Rcpp::traits::input_parameter< List >::type inv_phenocovs(inv_phenocovsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type non_optim_transform(non_optim_transformSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type models(modelsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type externalEdge(externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type not_externalEdge(not_externalEdgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_anc(dist_ancSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type dist_des(dist_desSEXP);
    Rcpp::traits::input_parameter< double >::type Tmax(TmaxSEXP);
    Rcpp::traits::input_parameter< double >::type Tmin(TminSEXP);
    Rcpp::traits::input_parameter< int >::type nmodels(nmodelsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lower_bounds(lower_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type upper_bounds(upper_boundsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type OU_D(OU_DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type times(timesSEXP);
    __result = Rcpp::wrap(threepoint_calc_pheno_predict(theta, options, y, ku, iu, edge, edgelength, uchildren_list, subset_list, species_subset, tip_combn, ymin, ymax, phenocovs, inv_phenocovs, non_optim_transform, models, externalEdge, not_externalEdge, dist_anc, dist_des, Tmax, Tmin, nmodels, lower_bounds, upper_bounds, OU_D, times));
    return __result;
END_RCPP
}
// recursion
List recursion(arma::mat edge, int any_species_no_data, arma::vec which_no_species_data, arma::vec iu, arma::vec options, arma::vec species, arma::vec tiplabel);
RcppExport SEXP Rphylopars_recursion(SEXP edgeSEXP, SEXP any_species_no_dataSEXP, SEXP which_no_species_dataSEXP, SEXP iuSEXP, SEXP optionsSEXP, SEXP speciesSEXP, SEXP tiplabelSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type edge(edgeSEXP);
    Rcpp::traits::input_parameter< int >::type any_species_no_data(any_species_no_dataSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type which_no_species_data(which_no_species_dataSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type iu(iuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type options(optionsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type species(speciesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type tiplabel(tiplabelSEXP);
    __result = Rcpp::wrap(recursion(edge, any_species_no_data, which_no_species_data, iu, options, species, tiplabel));
    return __result;
END_RCPP
}
